{"version":3,"sources":["Components/Cast/Cast.module.css","Components/Cast/Cast.js"],"names":["module","exports","Cast","state","cast","error","a","movieId","this","props","match","params","moviesApi","castFetch","then","setState","catch","window","scrollTo","top","innerHeight","behavior","className","styles","cast__list","map","id","profile_path","character","name","src","alt","Component"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,WAAa,yBAAyB,WAAa,2B,2ICK/DC,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,MAAO,M,8FAEX,mCAAAC,EAAA,sDACYC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,IACKC,UAAUN,GACVO,MAAK,SAAAV,GAAI,OAAI,EAAKW,SAAS,CAAEX,YAC7BY,OAAM,SAAAX,GAAK,OAAI,EAAKU,SAAS,CAAEV,aALxC,gD,sFAQA,WACIY,OAAOC,SAAS,CACZC,IAAKF,OAAOG,YACZC,SAAU,a,oBAIlB,WAAU,IACEjB,EAASI,KAAKL,MAAdC,KACR,OACI,oBAAIkB,UAAWC,IAAOC,WAAtB,SACKpB,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACN,+BACI,qBACIC,IAAG,0CAAqCH,GACxCI,IAAKF,IAET,4BAAIA,IACJ,4CAAeD,OANVF,Y,GAzBVM,aA2CJ9B","file":"static/js/Cast-component.4e7d44dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast__list\":\"Cast_cast__list__pgyBf\",\"cast__item\":\"Cast_cast__item__2-Rcu\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moviesApi from '../../Services/moviesApi';\n\nimport styles from '../Cast/Cast.module.css';\n\nclass Cast extends Component {\n    state = {\n        cast: [],\n        error: null,\n    };\n    async componentDidMount() {\n        const { movieId } = this.props.match.params;\n        moviesApi\n            .castFetch(movieId)\n            .then(cast => this.setState({ cast }))\n            .catch(error => this.setState({ error }));\n    }\n\n    componentDidUpdate() {\n        window.scrollTo({\n            top: window.innerHeight,\n            behavior: 'smooth',\n        });\n    }\n\n    render() {\n        const { cast } = this.state;\n        return (\n            <ul className={styles.cast__list}>\n                {cast.map(({ id, profile_path, character, name }) => (\n                    <li key={id}>\n                        <img\n                            src={`http://image.tmdb.org/t/p/w185//${profile_path}`}\n                            alt={name}\n                        />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nCast.propTypes = {\n    cast: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Cast;\n"],"sourceRoot":""}